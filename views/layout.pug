block dependencies
- if(typeof css === "undefined") css = [];
- if(typeof pageTitle === "undefined") pageTitle = null;
- if(typeof pageDesc === "undefined") pageDesc = null;
- if(typeof overrideNavPath === "undefined") overrideNavPath = null;
- if(typeof pinnable === "undefined") pinnable = false;
- if(typeof navbarSupportsTopMode === "undefined") navbarSupportsTopMode = false;
- if(typeof isPoppedOut === "undefined") isPoppedOut = false;
- var resourceVersion = "10"; // Increment this when you make a change to the HTML that absolutely requires CSS or JS refreshing
- var hasCommunityGuidelines = fs.existsSync("./config/community_guidelines.md");
- var hasTOS = TOSManager.hasTOSSync();
- var hasPP = TOSManager.hasPrivacyPolicySync();
mixin renderBadge(badge, prefersShortText = false)
  span.label.badge-label(class=`label-${badge.style || "default"}`, title=badge.title) #{prefersShortText && badge.shortText ? badge.shortText : badge.text}
mixin renderBadges(badges, prefersShortText = false)
  each badge in badges
    +renderBadge(badge, prefersShortText)
mixin renderNavItem(name, itemPath, icon, showsName = true)
  - var isCurrentPage = itemPath == (overrideNavPath || path);
  li(id=`nav-${name.toLowerCase().replace(/[^0-9a-z ]/gi, '').replace(/ /g, "-")}`, class=(isCurrentPage ? "active" : ""))
    a(href=itemPath)
      if icon
        i.fa.fa-fw(class=`fa-${icon}`)
        span(class=showsName ? "" : "visible-xs-inline") #{name}
      if isCurrentPage
        span.sr-only (current)
doctype html
html(lang="en")
  head
    meta(charset="utf-8")
    meta(http-equiv="X-UA-Compatible", content="IE=edge")
    meta(name="viewport", content="width=device-width, initial-scale=1, user-scalable=no")
    title !{pageTitle != null ? `${pageTitle} &middot; ` : ""}#{config.siteName}
    // Icons and web app config
    link(rel="apple-touch-icon", href="/img/apple-touch-icon.png")
    link(rel="icon", type="image/png", sizes="16x16", href="/img/favicon-16x16.png?n=1")
    link(rel="icon", type="image/png", sizes="32x32", href="/img/favicon-32x32.png?n=1")
    link(rel="icon", type="image/png", sizes="96x96", href="/img/favicon-96x96.png?n=1")
    link(rel="icon", type="image/x-icon", sizes="16x16", href="/img/favicon.ico?n=1")
    link(rel="shortcut icon", type="image/x-icon", sizes="16x16", href="/img/favicon.ico?n=1")
    if pinnable
      meta(name="apple-mobile-web-app-capable", content="yes")
      meta(name="apple-mobile-web-app-status-bar-style", content="default")
    // OpenGraph + Twitter meta tags
    meta(property="og:title" content=(pageTitle || config.siteName))
    if pageTitle
      meta(property="og:site_name", content=config.siteName)
    meta(property="og:url", content=config.host)
    meta(property="og:image", content="/img/apple-touch-icon.png")
    meta(property="twitter:card", content="summary")
    meta(property="twitter:title", content=`${config.siteName}${pageTitle != null ? `: ${pageTitle}` : ""}`)
    meta(property="twitter:image", content="/img/apple-touch-icon.png")
    if pageDesc
      meta(property="og:description", content=pageDesc)
      meta(property="twitter:description", content=pageDesc)
    // Unrelated meta tags
    meta(name="place-site-name", content=config.siteName)
    // Hard CSS
    link(href="https://fonts.googleapis.com/css?family=Open+Sans:300,400,600,700", rel="stylesheet")
    link(href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css", rel="stylesheet")
    link(href="https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css", rel="stylesheet")
    // Provided CSS
    - css.unshift("/css/global.css")
    each item in [...new Set(css)]
      link(href=item + "?v=" + resourceVersion, rel="stylesheet")
    // Shivs
    <!--[if lt IE 9]>
      script(src="https://oss.maxcdn.com/html5shiv/3.7.3/html5shiv.min.js")
      script(src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js")
    <![endif]-->
  body.fixed-navbar
    nav#page-nav(class=`navbar navbar-default navbar-fixed-top${navbarSupportsTopMode ? " supports-top" : ""}`)
      .container
        // Brand and toggle get grouped for better mobile display
        .navbar-header
          button.navbar-toggle.collapsed(type="button", data-toggle="collapse", data-target="#navbar-collapse", aria-expanded="false")
            span.sr-only Toggle navigation
            span.icon-bar
            span.icon-bar
            span.icon-bar
          a.navbar-brand(href="https://www.dynastic.co", style="margin-right: -5px")
            img(src="https://assets.dynastic.co/brand/img/icon-46.png", height="20")
          a.navbar-brand(href="/")
            | #{config.siteName}
        .collapse.navbar-collapse#navbar-collapse
          ul.nav.navbar-nav
            +renderNavItem("Home", "/", "home")
            li.dropdown
              a.dropdown-toggle(data-toggle="dropdown", href="#", role="button", aria-haspopup="true", aria-expanded="false")
                i.fa.fa-users.fa-fw
                .
                  Community #[span.caret]
              ul.dropdown-menu
                +renderNavItem("Official Subreddit", "https://www.reddit.com/r/place20", "reddit-alien")
                +renderNavItem("Chat on Discord", "https://discord.gg/CgC8FTg", "comments")
                +renderNavItem("Timelapses", "https://timelapse.canvas.place", "clock-o")
                +renderNavItem("Merch", "https://merch.canvas.place", "shopping-cart")
                +renderNavItem("Source Code", "https://www.github.com/dynastic/place", "github")
    main
      // Content-insertion point
      block content
- if(typeof js === "undefined" || !js) js = [];
- if(typeof jsSnippets === "undefined" || !jsSnippets) jsSnippets = [];
    footer.footer
        .container.footer-contents
            div
                p.text-muted &copy; Dynastic
            .right
                p: ul.footer-links
                    if hasTOS
                        li: a(href="/tos") Terms of Service
                    if hasCommunityGuidelines
                        li: a(href="/guidelines") Rules
                    if hasPP
                        li: a(href="/privacy") Privacy Policy
      
    // Scripts
    script(src="https://ajax.googleapis.com/ajax/libs/jquery/1.12.4/jquery.min.js")
    script(src="https://cdn.jsdelivr.net/gh/rmm5t/jquery-timeago@180864a9c544a49e43719b457250af216d5e4c3a/jquery.timeago.js")
    script(src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js", integrity="sha384-Tc5IQib027qvyjSMfHjOMaLkfuWVxZxUPnCJA7l2mCWNIpG9mGCD8wGNIcPD7Txa", crossorigin="anonymous")
    script(src="https://cdn.polyfill.io/v2/polyfill.min.js")
    - js.unshift("/js/build/site.js");
    each item in [...new Set(js)]
        script(src=item + "?v=" + resourceVersion)